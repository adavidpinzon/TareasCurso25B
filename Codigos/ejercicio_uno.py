# -*- coding: utf-8 -*-
"""ejercicio uno.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZrhjXJo4AWBRnMGMZtRzZb2hz_y46fOq
"""

# implementar el proceso de Gram-Schmidt para ortogonalizar monomios con un producto interno ponderado.
import sympy as sp
from sympy import Matrix, integrate, symbols

t = symbols('t')
a, b = -1, 1

# Base y producto interno
base = [Matrix([t**n]) for n in range(4)]
prod_int = lambda f, g: integrate(f[0]*g[0]*sp.sqrt(1-t**2), (t, a, b))

# Gram-Schmidt optimizado
ortogonales = []
for v in base:
    u = v.copy()
    for w in ortogonales:
        u -= (prod_int(v, w) / prod_int(w, w)) * w
    ortogonales.append(u)

# Resultado simplificado
print("Polinomios ortogonales:")
[print(f"P_{i}(t) = {p[0].simplify()}") for i, p in enumerate(ortogonales)]