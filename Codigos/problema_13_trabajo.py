# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19Vx349rQDl7Md-WKtm1YxBB_S-G9HK7s
"""

#Trabajo en campo de fuerza (Problema 13)
import sympy as sp

# Definir componentes del campo vectorial
x, y, t = sp.symbols('x y t')
F_x = -y / (x**2 + y**2)
F_y = x / (x**2 + y**2)

# Parametrización de la curva (círculo unitario)
x_t = sp.cos(t)
y_t = sp.sin(t)

# Derivadas de las componentes
dx_dt = sp.diff(x_t, t)
dy_dt = sp.diff(y_t, t)

# Sustituir en el campo vectorial
F_x_t = F_x.subs({x: x_t, y: y_t})
F_y_t = F_y.subs({x: x_t, y: y_t})

# Integrar trabajo (F·dr)
integrando = F_x_t * dx_dt + F_y_t * dy_dt
integrando_simp = sp.simplify(integrando)

# Calcular integrales
trabajo_a = sp.integrate(integrando_simp, (t, 0, sp.pi))  # 0 a π (antihorario)
trabajo_b = sp.integrate(integrando_simp, (t, 0, -sp.pi)) # 0 a -π (horario)

# Resultados
print("*** Cálculo de trabajo en campo de fuerza ***")
print("\nCampo vectorial F:")
print(f"F_x = {F_x}")
print(f"F_y = {F_y}")

print("\nParametrización del círculo unitario:")
print(f"x(t) = {x_t}, y(t) = {y_t}")

print("\nIntegrando simplificado (F·dr/dt):", integrando_simp)

print("\n(a) Trabajo de 0 a π (antihorario):", trabajo_a)
print("(b) Trabajo de 0 a -π (horario):", trabajo_b)
print("\nNota: El trabajo es el mismo en ambos casos pero con signo opuesto.")